# ansible-playbook --inventory-file ./ip.txt  --ask-vault-pass ec2_create.yml -v
- hosts: localhost
  vars_files: 
    - credentials.yml
    - vars.yml
  tasks:
    - name: Installing boto library
      pip:
         name: boto
         state: present
    - name: Making Security group for multi-node cluster
      amazon.aws.ec2_group:
         name: "{{ secgroup_name }}"
         aws_region: "{{ aws_region }}"
         description: "{{ security_group_description }}"
         vpc_id: "{{ vpc_id }}"
         aws_access_key: "{{ access_key }}"
         aws_secret_key: "{{ secret_key }}"
         rules:
            - proto: all
              cidr_ip: "0.0.0.0/0"

    - name: Launching Master Node
      amazon.aws.ec2_instance:
         name: "master-node"
         aws_region: "{{ aws_region }}"
         key_name: "{{ aws_key_name }}"
         instance_type: "{{ aws_instance_type }}"
         image_id: "{{ aws_image_id }}"
         security_group: "{{ secgroup_name }}"
         network:    
           assign_public_ip: true
         subnet_id: "{{ aws_subnet }}"
         aws_access_key: "{{ access_key }}"
         aws_secret_key: "{{ secret_key }}"
         state: running
         wait: true
      register: masterIp

    - name: Updating the master node's public ip in inventory
      lineinfile:
         path: "{{ inventory_location }}"
         regexp: "masterNode"
         line: "[masterNode]\n{{ masterIp['instances'][0]['public_ip_address']}} ansible_user={{ ansible_user }} ansible_connection=ssh\n"

    - name: Launching Worker Nodes
      amazon.aws.ec2_instance:
         name: "worker-node-{{ item+1 }}"
         aws_region: "{{ aws_region }}"
         key_name: "{{ aws_key_name }}"
         instance_type: "{{ aws_instance_type }}"
         image_id: "{{ aws_image_id }}"
         security_group: "{{ secgroup_name }}"
         network:
           assign_public_ip: true
         subnet_id: "{{ aws_subnet }}"
         aws_access_key: "{{ access_key }}"
         aws_secret_key: "{{ secret_key }}"
         state: running
         wait: true
      register: workerIp
      loop: "{{ range(0, worker_node_count | int) }}"
      
    - name: Updating the worker node's public ip in inventory
      lineinfile:
         path: "{{ inventory_location }}"
         regexp: "workerNode"
         line: "[workerNode]\n{{ workerIp['results'][item]['instances'][0]['public_ip_address']}} ansible_user={{ ansible_user }} ansible_connection=ssh"
      loop: "{{ range(0, worker_node_count | int) }}"
